jpsVersion: 1.3
jpsType: install
application:
  id: shopozor-backend-test
  name: Shopozor Backend Test API
  version: 0.0

  globals:
    HOME: /var/www/webroot
    CONTEXT: ROOT
    DJANGO_SETTINGS_MODULE: features.settings
    PATH_TO_CONTEXT: ${globals.HOME}/${globals.CONTEXT}
    SECRET_KEY: ${fn.uuid}
    PG_USER_PASSWORD: ${fn.password(10)}
    PG_DB_USERNAME: saleor
    PG_DB_NAME: saleor
    REDIS_PASSWORD: ${fn.password(10)}
    PYTHON_VIRTUAL_ENV: env
    PATH_TO_VIRTUAL_ENV: ${globals.HOME}/${globals.PYTHON_VIRTUAL_ENV}
  
  baseUrl: https://raw.githubusercontent.com/softozor/shopozor-backend/GIT_BRANCH/

  env:
    topology:
      nodes:
        - nodeGroup: bl
          nodeType: nginx-dockerized
          tag: 1.14.2
          displayName: Node balancing
          count: 1
          fixedCloudlets: 1
          cloudlets: 4
          env:
            DOCKER_EXPOSED_PORT: 22,80,443
            SECRET_KEY: ${globals.SECRET_KEY}
        - nodeGroup: cp
          nodeType: apache2-python
          tag: 2.4.39-python-3.7.3
          displayName: Application servers
          count: 1
          fixedCloudlets: 4
          cloudlets: 10
          env:
            # This is required for the migration step
            SECRET_KEY: ${globals.SECRET_KEY}
            PYTHONPATH: ${globals.PATH_TO_CONTEXT}/saleor
            DJANGO_SETTINGS_MODULE: ${globals.DJANGO_SETTINGS_MODULE}
            PATH_TO_VIRTUAL_ENV: ${globals.PATH_TO_VIRTUAL_ENV}
        - nodeGroup: sqldb
          nodeType: postgresql
          tag: 11.2
          displayName: PostgreSQL
          fixedCloudlets: 1
          cloudlets: 4
          env: 
            PG_DB_NAME: ${globals.PG_DB_NAME}
            PG_DB_USERNAME: ${globals.PG_DB_USERNAME}
            PG_USER_PASSWORD: ${globals.PG_USER_PASSWORD}
        - nodeGroup: nosqldb
          nodeType: redis
          tag: 4.0.11
          displayName: Redis cache
          fixedCloudlets: 1
          cloudlets: 4

  onInstall:
    - setPasswordOnRedisNode
    - prepareDatabase
    - deployRepo
    - createVirtualEnv
    - setupJwt
    - setupWsgi
    # TODO: close that environment from outside world!
  actions:
    setPasswordOnRedisNode:
      - replaceInFile:
          path: /etc/redis.conf
          replacements:
            - pattern: requirepass\ .*
              replacement: requirepass ${globals.REDIS_PASSWORD}
          nodeType: redis
      - restartService:
          - nodeType: redis
    prepareDatabase:
      - setDatabaseUrlEnvVar
    setDatabaseUrlEnvVar:
      - api:
          - method: jelastic.environment.control.AddContainerEnvVars
            params:
              nodeGroup: cp
              vars:
                DATABASE_URL: postgres://${globals.PG_DB_USERNAME}:${globals.PG_USER_PASSWORD}@${nodes.sqldb.intIP}:5432/${globals.PG_DB_NAME}
                CACHE_URL: redis://:${globals.REDIS_PASSWORD}@${nodes.nosqldb.intIP}:6379/0
    deployRepo:
      api:
        - method: environment.vcs.CreateProject
          params:
            type: git
            context: ${globals.CONTEXT}
            url: https://github.com/softozor/shopozor-backend
            branch: GIT_BRANCH
            login: GIT_USER
            password: GIT_PASSWORD
        - method: environment.vcs.Update
          params:
            context: ${globals.CONTEXT}
      nodeGroup: cp
    createVirtualEnv:
      - cmd[cp]:
          - cd ~
          - virtualenv ${globals.PYTHON_VIRTUAL_ENV}
          - source ${globals.PATH_TO_VIRTUAL_ENV}/bin/activate
          - cd ${globals.PATH_TO_CONTEXT}
          - chmod u+x ./scripts/install/*.sh
          - ./scripts/install/install.sh
          - ./scripts/install/install-dev.sh
    setupJwt:
      - script: ${baseUrl}/scripts/SetJwtEnvVars.js
        url: https://raw.githubusercontent.com/softozor/shopozor-fixtures/master/Authentication/Credentials/Jwt.json
    setupWsgi:
      - api:
          - method: environment.file.Delete
            params: 
              path: /etc/httpd/conf.d/wsgi.conf
              nodeGroup: cp
      - upload:
          - sourcePath: ${baseUrl}/e2e/config/wsgi.py
            destPath: ${globals.PATH_TO_CONTEXT}/wsgi.py
          - sourcePath: ${baseUrl}/e2e/config/wsgi.conf
            destPath: /etc/httpd/conf.d/wsgi.conf
        nodeGroup: cp
      - forEach(nodes.cp):
          script: ${baseUrl}/scripts/ReplaceWsgiPlaceholders.js
          pathToFile: ${globals.PATH_TO_CONTEXT}/wsgi.py
          domainNames: ${env.envName}.hidora.com
          nodeId: ${@i.id}